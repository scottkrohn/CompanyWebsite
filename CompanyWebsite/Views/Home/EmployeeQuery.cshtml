
@{
    ViewBag.Title = "EmployeeQuery";
}

@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/QueryTemplates.js"></script>

<div class="container">
    <div class="row">
        <div class="col-md-12 text-center">
            <h2>Query Employee Information</h2>
            <h3>Below you can query various information about current employees.</h3>
            <hr />
        </div>
    </div>
    <div class="row add-margin-top">
        <div style="border: 1px solid;" class="col-md-4 text-center">
            <h3>Queries</h3>

            <div class="col-md-12">
                <span id="ViewAllEmployees" class="btn btn-primary">View Employees</span>
            </div>

            <div class="col-md-12">
                <span id="ViewAllManagers" class="btn btn-primary add-margin-top">View Managers</span>
            </div>

            <div class="col-md-12">
                <span id="ViewEmployeesManagers" class="btn btn-primary add-margin-top">View Employee's Managers</span>
            </div>

            <div class="col-md-12">
                <span id="ViewSpecificEmployee" class="btn btn-primary add-margin-top">View Specific Employee</span>
            </div>
            <div class="row col-md-12">
                <form>
                    <div class="form-group text-center col-md-11 col-md-offset-1">
                        <input type="text" class="form-control add-margin-top" placeholder="First Name" id="specificEmployeeFirstName" />
                        <input type="text" class="form-control add-margin-top" placeholder="Last Name" id="specificEmployeeLastName" />
                    </div>
                </form>     
            </div>

            <div class="col-md-12">
                <span id="hiredAfter" class="btn btn-primary add-margin-top">View Employees Hired After</span>
            </div>
            <div class="row col-md-12">
                <form>
                    <div class="form-group text-center col-md-11 col-md-offset-1">

                        <input type="text" class="form-control add-margin-top" placeholder="Month" id="monthInput" style="width: 30%; display: inline"/>

                        <input type="text" class="form-control add-margin-top" placeholder="Day" id="dayInput"style="width: 30%; display: inline;"/>

                        <input type="text" class="form-control add-margin-top" placeholder="Year" id="yearInput"style="width: 30%; display: inline;"/>

                    </div>
                </form>     
            </div>

            <div class="col-md-12">
                <span id="SalaryAbove" class="btn btn-primary add-margin-top">View Employees With Salary Above</span>
            </div>
            <div class="row col-md-12">
                <form>
                    <div class="form-group text-center col-md-11 col-md-offset-1">
                        <input type="text" class="form-control add-margin-top" placeholder ="e.g. 45000" id="salaryInput" />
                    </div>
                </form>     
            </div>
        </div>



        <div class="col-md-7 col-md-offset-1">
            <h3>Results</h3>
            <div id="data"></div>
        </div>
    </div>
</div>

<script>
    // Display all employees and all employee information.
    $('#ViewAllEmployees').click(function () {
        var query = 'SELECT * FROM employee';
        selectQuery(query);
    });

    $('#ViewAllManagers').click(function () {
        var query = "SELECT m.employeeId, m.managerId, e.firstName, e.lastName FROM manager m, employee e WHERE m.employeeId = e.employeeId";
        selectQuery(query);
    })

    $('#ViewEmployeesManagers').click(function () {
        var query = "SELECT e1.firstName, e1.lastName, e1.employeeId, e2.firstName as mgrFirstName, e2.lastName as mgrLastName, mgr.managerId, mo.deptName FROM employee e1, manager mgr, employee e2, manages mgs, memberof mo WHERE e1.employeeId = mgs.employeeId AND mgs.managerId = mgr.managerId AND e2.employeeId = mgr.employeeId AND e1.employeeId = mo.employeeId";
        selectQuery(query);
    });

    $('#ViewSpecificEmployee').click(function () {
        var first = $('#specificEmployeeFirstName').val();
        var last = $('#specificEmployeeLastName').val();

        if (first == "" || last == "") {
            alert("Please enter first and last name.");
        }
        else {
            var query = "select e.firstName, e.lastName, e.employeeId, e.hireDate, e.salary, e.ssn, mo.deptName from employee e, memberof mo where e.firstName = + '"
            query += first;
            query += "' AND e.lastName = '" + last + "' and e.employeeId = mo.employeeId";
            selectQuery(query);
        }
    });

    $('#hiredAfter').click(function () {
        var dateInputValue = getDate();
        if (dateInputValue == -1) {
            alert("Invalid date format, use MM/DD/YYYY")
            return;
        }

        var query = "SELECT * from employee WHERE hireDate >= '" + dateInputValue + "'";
        console.log(query);
        selectQuery(query);
    });

    // TODO: implement this and the getSalary function, make text input for salary accept integers only
    //***************************************************************************
    $('#SalaryAbove').click(function () {
        var salary = $('#salaryInput').val();
        if (!checkIsNum(salary) || salary == "") {
            alert("Invalid input for salary, please enter a number value.");
        }
        else {
            query = "SELECT e.employeeId, e.firstName, e.lastName, e.salary FROM employee e WHERE e.salary >= " + salary + " order by e.salary";
            selectQuery(query);
        }
    });

    function checkIsNum(value) {
        if (isNaN(value)) {
            return false;
        }
        return true;
    }


    function getDate() {
        var month = $('#monthInput').val();
        var day = $('#dayInput').val();
        var year = $('#yearInput').val();

        // Check for invalid input.
        if(isNaN(month) || isNaN(day) || isNaN(year) || day.length > 2 || month.length > 2 || year.length != 4){
            return -1;
        }

        // Add preceeding zero to values less than 10
        if(month < 10 && month.charAt(0) != 0){
            month = '0' + month;
        }
        if(day < 10 && day.charAt(0) != 0){
            day = '0' + day;
        }
        
        var selectedDate = [year, month, day].join('-');
        console.log(selectedDate);
        return selectedDate;
    }
</script>


